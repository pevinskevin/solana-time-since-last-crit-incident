document.addEventListener('DOMContentLoaded', async () => {
	const { status, updated_at } = await statusFetch();
	
	// Format the date nicely
	const formattedDate = updated_at.toLocaleString();
	
	// Determine status color
	let statusColor = "#14F195"; // Default green (using Solana green)
	if (status.toLowerCase().includes('degraded') || status.toLowerCase().includes('partial')) {
		statusColor = "#FFB84D"; // Orange for dark theme
	} else if (status.toLowerCase().includes('major') || status.toLowerCase().includes('critical')) {
		statusColor = "#FF4B4B"; // Red for dark theme
	}
	
	document.getElementById('2ndoutput').innerHTML = `
		<div class="status-row">
			<div class="status-indicator" style="background-color: ${statusColor}; color: ${statusColor};"></div>
			<div class="status-details">
				<div class="status-text">${status}</div>
				<div class="status-time">Updated: ${formattedDate}</div>
			</div>
		</div>
	`;
});

const statusFetch = async function () {
	const promise = await fetch('https://status.solana.com/api/v2/status.json');
	const response = await promise.json();
	// Parses date string code thing from 'updated_at' into the browsers local time.
	const parsedDate = new Date(response.page.updated_at);
	const statusData = {
		updated_at: parsedDate,
		status: response.status.description,
	};
	console.log(statusData);

	return statusData;
};
